node {
    stage('Checkout'){
        checkout scm
    }
    def rtMaven, buildNumber, server, buildInfo

    stage('Build, Deploy & Promote') {
        configFileProvider([configFile(fileId: 'd5b75962-6056-4d40-a724-5b90e45f7cbc', variable: 'SETTINGS_SECRET_FILE')]) {
            rtMaven = Artifactory.newMavenBuild()
            buildNumber = env.BUILD_NUMBER
            server = Artifactory.server "talyi-artifactory"
            rtMaven.deployer server: server, releaseRepo: 'libs-staging-local', snapshotRepo: 'libs-snapshot-local'
            rtMaven.tool = 'Maven 3.3.9'
            String mvnGoals = "-B clean install -Dmaven.test.skip=true -DartifactVersion=${buildNumber} -s ${SETTINGS_SECRET_FILE}"
            
            buildInfo = Artifactory.newBuildInfo()  
            buildInfo.name = "maven-${env.JOB_NAME}"
            buildInfo.env.collect()
            rtMaven.run pom: 'maths/pom.xml', goals: mvnGoals, buildInfo: buildInfo
            server.publishBuildInfo buildInfo   
        }  
    }
    
    stage('Promote') {
            def promotionConfig = [
                'buildName'  : buildInfo.name,
                'buildNumber': buildInfo.number,
                'targetRepo' : 'libs-release-local',
                'comment'    : 'This is a promotion from staging to release',
                'status'     : 'Released',
                'sourceRepo' : 'libs-staging-local',
                'copy'       : true,
                'failFast'   : true
            ]
           server.promote promotionConfig          
    }
}
