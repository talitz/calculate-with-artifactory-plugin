pipeline {
    agent any
	tools { 
        maven 'Maven 3.3.9' 
        jdk 'jdk8'  
    }   

    environment {
        SETTINGS_SECRET_FILE = credentials('settings-secret-file')
        buildNumber = env.BUILD_NUMBER
	jobName = env.JOB_NAME
        mavenBuildName = "maven-${jobName}"
        server = Artifactory.server "local-artifactory"
        rtFullUrl = server.url
	rtIpAddress = rtFullUrl - ~/^http?.:\/\// - ~/\/artifactory$/
        pipelineUtils = load 'pipelineUtils.groovy'
    }

    stages {    
        stage("checkout") {
            checkout scm
        }
	    
        stage("Build & Deploy") {
            def rtMaven = Artifactory.newMavenBuild()
            rtMaven.deployer server: server, releaseRepo: 'libs-staging-local', snapshotRepo: 'libs-snapshot-local'
            rtMaven.tool = 'Maven 3.3.9'
            String mvnGoals = "-B clean install -Dmaven.test.skip=true -DartifactVersion=${buildNumber} -s ${SETTINGS_SECRET_FILE}"
            def buildInfo = Artifactory.newBuildInfo()
            buildInfo.name = mavenBuildName
            buildInfo.env.collect()
            rtMaven.run pom: 'pom.xml', goals: mvnGoals, buildInfo: buildInfo
		
            server.publishBuildInfo buildInfo
		
	    def promotionConfig = [
		    'buildName'  : buildInfo.name,
		    'buildNumber': buildInfo.number,
		    'targetRepo' : 'libs-release-local',
		    'comment'    : 'This is a stable java-project version',
		    'status'     : 'Released',
		    'sourceRepo' : 'libs-staging-local',
		    'copy'       : true,
		    'failFast'   : true
	    ]
	    server.promote promotionConfig		
        }	     	    
    }
}
